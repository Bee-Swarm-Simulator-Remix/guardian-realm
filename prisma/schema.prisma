generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

enum InfractionType {
    BAN
    KICK
    MUTE
    WARNING
    MASSBAN
    TEMPBAN
    SOFTBAN
    MASSKICK
    UNBAN
    UNMUTE
    BULK_DELETE_MESSAGE
    TIMEOUT
    TIMEOUT_REMOVE
}

model Infraction {
    id          Int            @id @default(autoincrement())
    type        InfractionType
    userId      String
    guildId     String
    reason      String?
    moderatorId String
    expiresAt   DateTime?
    metadata    Json?
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @default(now()) @updatedAt
    queueId     Int?

    @@map("infractions")
}

model SpamRecord {
    id        Int      @id @default(autoincrement())
    user_id   String
    guild_id  String
    level     Int      @default(1)
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    @@map("spam_records")
}

model Queue {
    id         Int      @id @default(autoincrement())
    user_id    String
    guild_id   String
    channel_id String?
    message_id String?
    file_name  String
    name       String
    args       String[] @default([])
    createdAt  DateTime @default(now())
    willRunAt  DateTime

    @@map("queues")
}

model Snippet {
    id          Int      @id @default(autoincrement())
    name        String
    user_id     String
    guild_id    String
    roles       String[] @default([])
    channels    String[] @default([])
    users       String[] @default([])
    attachments String[] @default([])
    content     String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now()) @updatedAt

    @@map("snippets")
}
